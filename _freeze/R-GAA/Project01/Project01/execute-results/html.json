{
  "hash": "478a41bc9296ed17cc27f0efdb91d471",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project 1\"\nauthor: \"Ha Duc Tien\"\ndate: \"August 24, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1. Overview and Objective\n\nPrevious studies have demonstrated the significant potential of Spatial Point Patterns Analysis (SPPA) in exploring and identifying factors influencing road traffic accidents. However, these studies often focus solely on either behavioral or environmental factors, with limited consideration of temporal factors such as season, day of the week, or time of day.\n\n-   In view of this, I am tasked to discover factors affecting road traffic accidents in the Bangkok Metropolitan Region BMR by employing both spatial spatio-temporal point patterns analysis methods.\n\nThe specific objectives of this take-home exercise are as follows:\n\n-   To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.\n-   To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.\n-   To conduct detailed spatio-temporal analysis of road traffic accidents using appropriate Temporal Network Spatial Point Patterns Analysis methods.\n\n# 2. Getting started\n\nIn this exercise, the below R packages will be used. They are:\n\n-   [`sf`](https://r-spatial.github.io/sf/) for importing, managing, and processing geospatial data, and\n-   [`tidyverse`](https://www.tidyverse.org/) for performing data science tasks such as importing, wrangling and visualising data.\n-   [`spatstat`](https://spatstat.org/), which has a wide range of useful functions for point pattern analysis.\n-   [`raster`](https://cran.r-project.org/web/packages/raster/) which reads, writes, manipulates, analyses and model of gridded spatial data\n-   [`maptools`](https://cran.r-project.org/web/packages/maptools/index.html) which provides a set of tools for manipulating geographic data.\n-   [`tmap`](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using leaflet API.\n-   [spNetwork](https://cran.r-project.org/web/packages/spNetwork/index.html), which provides functions to perform Spatial Point Patterns Analysis such as kernel density estimation (KDE) and K-function on network. It also can be used to build spatial matrices (‘listw’ objects like in ‘spdep’ package) to conduct any kind of traditional spatial analysis with spatial weights based on reticular distances.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(raster, spatstat, tmap, tidyverse, sparr, maptools, spNetwork, sf)\n```\n:::\n\n\n\n# 3. The data\n\nFor the purpose of this exercise, three basic data sets must be used, they are:\n\n-   [Thailand Road Accident (2019-2022)](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) on Kaggle\n\n-   [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads) on HDX.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) on HDX.\n\n## Importing and wrangling the data\n\nThe below code would import the **Thailand Road Accident (2019-2022)**, make changes to the coordinates by filtering out the ones with empty or NA coordinates then filter out the region of study which is the Bangkok Metropolitan Region BMR and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647. The operation would also create 2 new columns that has the Month and the Year of the date accidents occured. This step would create `accident_data_sf`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_sf <- read_csv(\"data/nongeo/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) & longitude != \"\",\n         !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), \n           crs = 4326) %>%\n  filter(province_en %in% list(\"Bangkok\", \"Nonthaburi\", \n                                           \"Nakhon Pathom\", \"Pathum Thani\", \n                                           \"Samut Prakan\", \"Samut Sakhon\")) %>%\n  mutate(`incident_monthyear` = format(as.Date(`incident_datetime`), \"%Y/%m\")) %>%\n  mutate(`incident_year` = format(as.Date(`incident_datetime`), \"%Y\")) %>%\n  st_transform(crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(accident_data_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nsf [12,986 × 19] (S3: sf/tbl_df/tbl/data.frame)\n $ acc_code                   : num [1:12986] 571882 600001 605043 629691 571887 ...\n $ incident_datetime          : POSIXct[1:12986], format: \"2019-01-01 02:25:00\" \"2019-01-01 03:00:00\" ...\n $ report_datetime            : POSIXct[1:12986], format: \"2019-01-02 17:32:00\" \"2019-01-05 10:33:00\" ...\n $ province_th                : chr [1:12986] \"นครปฐม\" \"นนทบุรี\" \"สมุทรปราการ\" \"กรุงเทพมหานคร\" ...\n $ province_en                : chr [1:12986] \"Nakhon Pathom\" \"Nonthaburi\" \"Samut Prakan\" \"Bangkok\" ...\n $ agency                     : chr [1:12986] \"department of rural roads\" \"department of highways\" \"department of highways\" \"expressway authority of thailand\" ...\n $ route                      : chr [1:12986] \"แยกทางหลวงหมายเลข 4 (กม.ที่ 51+920) - บ้านวัดละมุด\" \"คลองวัดแดง - บางบัวทอง\" \"ราษฎร์บูรณะ - พระสมุทรเจดีย์\" \"บางพลี-สุขสวัสดิ์\" ...\n $ vehicle_type               : chr [1:12986] \"motorcycle\" \"private/passenger car\" \"private/passenger car\" \"other\" ...\n $ presumed_cause             : chr [1:12986] \"speeding\" \"speeding\" \"running red lights/traffic signals\" \"other\" ...\n $ accident_type              : chr [1:12986] \"rollover/fallen on straight road\" \"rollover/fallen on straight road\" \"collision at intersection corner\" \"other\" ...\n $ number_of_vehicles_involved: num [1:12986] 1 1 2 1 1 1 1 1 1 1 ...\n $ number_of_fatalities       : num [1:12986] 0 0 0 0 0 1 1 0 0 0 ...\n $ number_of_injuries         : num [1:12986] 2 1 0 1 1 0 0 0 0 1 ...\n $ weather_condition          : chr [1:12986] \"clear\" \"clear\" \"clear\" \"clear\" ...\n $ road_description           : chr [1:12986] \"straight road\" \"straight road\" \"other\" \"other\" ...\n $ slope_description          : chr [1:12986] \"no slope\" \"no slope\" \"other\" \"other\" ...\n $ geometry                   :sfc_POINT of length 12986; first list element:  'XY' num [1:2] 627012 1533381\n $ incident_monthyear         : chr [1:12986] \"2019/01\" \"2019/01\" \"2019/01\" \"2019/01\" ...\n $ incident_year              : chr [1:12986] \"2019\" \"2019\" \"2019\" \"2019\" ...\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:18] \"acc_code\" \"incident_datetime\" \"report_datetime\" \"province_th\" ...\n```\n\n\n:::\n:::\n\n\n\nThis part is to import **Thailand Roads (OpenStreetMap Export)** and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647 to create `THR_sf`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTHR_sf <- st_read(dsn = \"data/geo\", \n                         layer = \"hotosm_tha_roads_lines_shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `C:\\Users\\tien_\\OneDrive\\SMU\\haductien1211\\Portfolio\\R-GAA\\Project01\\data\\geo' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n\n\n:::\n\n```{.r .cell-code}\nTHR_sf <-  st_set_crs(THR_sf, 32647)\n```\n:::\n\n\nThis part is to import **Thailand - Subnational Administrative Boundaries** as well as filtering out the region of study which is the Bangkok Metropolitan Region BMR and converting the projected coordinate system of data to WGS 84 / UTM zone 47N and the EPSG code is 32647 to create `THSAB_sf`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTHSAB_sf <- st_read(dsn = \"data/geo\", \n                         layer = \"tha_admbnda_adm2_rtsd_20220121\") %>%\n  filter(ADM1_EN %in% list(\"Bangkok\", \"Nonthaburi\", \"Nakhon Pathom\",\n                      \"Pathum Thani\", \"Samut Prakan\", \"Samut Sakhon\")) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm2_rtsd_20220121' from data source \n  `C:\\Users\\tien_\\OneDrive\\SMU\\haductien1211\\Portfolio\\R-GAA\\Project01\\data\\geo' \n  using driver `ESRI Shapefile'\nSimple feature collection with 928 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n# 4. Analysis\n\n## 4.1 Quick analysis\n\nNow let's take a quick look at temporal distribution of accidents data. The idea of this is to identify whether there is any identifiable temporal patterns in the distribution of accidents.\n\nTo to this I will be plotting a bar chart showing the counts of accidents months on end from 2019 to 2022.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accident_data_sf) +\n  geom_bar(aes(x = incident_monthyear), \n                 bin = 100, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  xlab(\"Time\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-6-1.png){width=2400}\n:::\n:::\n\n\n\n:::callout-note\n\nThe above graph review that accident tends to peak around January April, July, October and December. Interestingly, these period seems to coincide with holidays seasons in Thailand.\n\n:::\n\nBut what about the year by year number of cases ?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accident_data_sf) +\n  geom_bar(aes(x = incident_year),\n                 color=\"black\", \n                 fill=\"light blue\") +\n  xlab(\"Province\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-7-1.png){width=1200}\n:::\n:::\n\n\n\n:::callout-note\n\nThe above graph review that number of accidents are around the same over the year and does not seem to be getting better.\n\n:::\n\nBut how about the distribution of cases of the different region within the review region?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(accident_data_sf) +\n  geom_bar(aes(x = province_en),\n                 color=\"black\", \n                 fill=\"light blue\") +\n  xlab(\"Province\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-8-1.png){width=1200}\n:::\n:::\n\n\n\n:::callout-note\n\nThe above results shown that majority of accidents cases from 2019 to 2022 is actually from Bangkok province itself which does make sense since the concentration of population are probably in this region as well which leads to higher traffics\n\n:::\n\nThe graphs below are showcasing the Distribution of accidents in different scale from **overall** to **year by year** and to **month by year**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(THSAB_sf) +\n  tm_polygons() +\ntm_shape(accident_data_sf) +\n  tm_dots(size = 0.01, \"red\") +\ntm_layout(main.title = \"Distribution of accidents\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-9-1.png){width=1200}\n:::\n\n```{.r .cell-code}\n# tm_shape(THR_sf) +\n#   tm_lines()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(THSAB_sf) +\n  tm_polygons() +\ntm_shape(accident_data_sf) +\n  tm_dots(size = 0.01, \"red\") +\ntm_facets(by = \"incident_year\",\n          free.coords = FALSE,\n          free.scales = FALSE,\n          drop.units = TRUE) +\ntm_layout(main.title = \"Distribution of accidents by year\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-10-1.png){width=1200}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(THSAB_sf) +\n  tm_polygons() +\ntm_shape(accident_data_sf) +\n  tm_dots(size = 0.1, \"red\") +\ntm_facets(by = \"incident_monthyear\",\n          free.coords = FALSE,\n          free.scales = FALSE,\n          drop.units = TRUE,\n          ncol = 12,\n          nrow = 4)+\ntm_layout(main.title = \"Distribution of accidents by month by year\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-11-1.png){width=5400}\n:::\n:::\n\n\n\n:::callout-note\n\nThe most comprehensive one are probably the month by year distribution which showcase the changes of distribution of accidents depending on the period and different seasons\n\n:::\n\n## 4.2 First-order Spatial Point Patterns Analysis\n\nKernel Density Estimation\n\n### Geospatial Data wrangling\n\nThe code chunk below uses as_Spatial() of sf package to convert the three geospatial data from simple feature data frame to sp’s Spatial* class.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data <- as_Spatial(accident_data_sf)\nTHSAB <- as_Spatial(THSAB_sf)\n```\n:::\n\n\n\nspatstat requires the analytical data in ppp object form. There is no direct way to convert a Spatial* classes into ppp object. We need to convert the Spatial classes* into Spatial object first.\n\nThe codes chunk below converts the Spatial* classes into generic sp objects.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_sp <- as(accident_data, \"SpatialPoints\")\nTHSAB_sp <- as(THSAB, \"SpatialPolygons\")\n```\n:::\n\n\n\nWe can check the duplication in a ppp object by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_ppp <- as.ppp(accident_data_sf)\nany(duplicated(accident_data_ppp))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\nSince the results return false there's no duplicated points in the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(accident_data_ppp)\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-15-1.png){width=5400}\n:::\n:::\n\n\n\n### Creating owin object\n\nThe code chunk below is used to covert the SpatialPolygon object into owin object of `spatstat`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTHSAB_owin <- as.owin(THSAB_sf)\n```\n:::\n\n\n\n\n### Rescalling KDE values\n\nwe will extract childcare events that are located within the review region and re-scale the unit of measurement from meter to kilometer by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naccident_data_owin_ppp <- accident_data_ppp[THSAB_owin]\naccident_data_owin_ppp.km <- rescale.ppp(accident_data_owin_ppp, 1000, \"km\")\n```\n:::\n\n\n\nNow, we can run `density()` using the resale data set and plot the output kde map. In this case I'll be using bw.diggle() since it seems to be working best\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_accident_data_bw <- density(accident_data_owin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                              kernel=\"gaussian\") \nplot(kde_accident_data_bw, main = \"Fixed bandwidth\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-18-1.png){width=1200}\n:::\n:::\n\n\n\nTo compared the above method I'll also be running another density using adaptive method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_accident_data_adaptive <- adaptive.density(accident_data_owin_ppp.km, method=\"kernel\")\nplot(kde_accident_data_adaptive, main = \"Adaptive bandwidth\")\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-19-1.png){width=1200}\n:::\n:::\n\n\n\n:::callout-note\n\nBoth graph produce roughly the same results which highlight some of the hot zone of accidents that could happen throughout the period. The KDE shown that there are hotspots in the roads between Bangkok - Samut Prakan, Bangkok - Pathum Thani and with a lower but still significant hotspot between Bangkok - Nakhon Pathom and Bangkok - Samut Sakhon\n\n:::\n\n### Testing spatial point patterns using Clark and Evans Test\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclarkevans.test(accident_data_ppp,\n                correction=\"none\",\n                clipregion=\"THSAB_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tClark-Evans test\n\tNo edge correction\n\tZ-test\n\ndata:  accident_data_ppp\nR = 0.16207, p-value < 2.2e-16\nalternative hypothesis: clustered (R < 1)\n```\n\n\n:::\n:::\n\n\n:::callout-note\n\nFrom the test results, we rejected the null hypothesis that the point patterns are randomly distributed.\n\n:::\n\n## 4.3 Second-order Spatial Point Patterns Analysis\n\n### Analysing Spatial Point Process Using G-Function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_CK = Gest(accident_data_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,2000))\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-21-1.png){width=1200}\n:::\n:::\n\n\n\n### Performing Complete Spatial Randomness Test Using G-Function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_CK.csr <- envelope(accident_data_ppp, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(G_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-22-1.png){width=1200}\n:::\n:::\n\n\n\n:::callout-note\n\nFrom the test results it seems likely that the null hypothesis is rejected and distribution of accidents at Bangkok Metropolitan Region BMR is not randomly distributed. The estimated G(r) lies above the upper envelope, the estimated G(r) is statistically significant\n\n:::\n\n### Analysing Spatial Point Process Using F-Function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK = Fest(accident_data_ppp)\nplot(F_CK)\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-23-1.png){width=1200}\n:::\n:::\n\n\n\n\n### Performing Complete Spatial Randomness Test Using F-Function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK.csr <- envelope(accident_data_ppp, Fest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(F_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Project01_files/figure-html/unnamed-chunk-24-1.png){width=1200}\n:::\n:::\n\n\n\n\n:::callout-note\n\nFrom the test results it seems likely that the null hypothesis is rejected and distribution of accidents at Bangkok Metropolitan Region BMR is not randomly distributed\n\n:::\n\n\n# 5. Conclusion\n\nThe above results shown that majority of accidents cases from 2019 to 2022 is actually from Bangkok province itself which does make sense since the concentration of population are probably in this region as well which leads to higher traffics. The initial analysis shown that that accident tends to peak around January April, July, October and December. Interestingly, these period seems to coincide with holidays seasons in Thailand.\n\nThe KDE shown that there are hotspots in the roads between Bangkok - Samut Prakan, Bangkok - Pathum Thani and with a lower but still significant hotspot between Bangkok - Nakhon Pathom and Bangkok - Samut Sakhon\n\nThe statistical test seems to reject the idea that the accidents are randomly distributed and hence it is likely that there are pattern within these accidents hotspots of which some has been highlighted due to potentially holiday period and concentration of traffics\n\nFurther investigation including different time of date and the hotspot changes throughout different period, seasons, weather changes should be studied further in this case to gain a more comprehensive understanding of the changes of accidents distributions ",
    "supporting": [
      "Project01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}